////////////////////////////////////////////////////////////
// terrible module system, we copy the common and java2ts //
// directories from the client/src/main/scripts folders   //
// here into the node project                             //
////////////////////////////////////////////////////////////
tasks.register('syncClientUtils', Sync) {
	from '../client/src/main/scripts/common'
	into 'src/main/scripts/common'
}

tasks.register('syncClientJava2Ts', Sync) {
	dependsOn ':client-interface:jsweet'
	from '../client/src/main/scripts/java2ts'
	into 'src/main/scripts/java2ts'
}

tasks.register('syncClientScripts', Copy) {
	dependsOn ':client:gulp_scriptsDev', ':client:gulp_stylesDev'
	from '../client/src/main/resources/assets-dev'
	into 'build/dist-client/assets-dev'
}

tasks.register('beforeCompile') {
	dependsOn 'syncClientUtils', 'syncClientJava2Ts', 'syncClientScripts', ':server:renderSocialTemplate'
}

apply plugin: 'com.diffplug.spotless'
spotless {
	ratchetFrom 'origin/staging'
	format 'typescript', {
		licenseHeaderFile rootProject.file('gradle/spotless-license-agpl.java'), '(import|const|declare|export|var) '
		target 'src/main/scripts/**/*.ts'
		targetExclude 'src/main/scripts/java2ts/**', 'src/main/scripts/common/**', 'src/main/scripts/server.ts', '**/__snapshots__/**'
		prettier(VER_PRETTIER)
	}
	format 'js', {
		target 'gulpfile.js'
		prettier(VER_PRETTIER)
	}
}

/////////////////////////////////
// smoke test the node project //
/////////////////////////////////
apply plugin: 'org.mytake.gradle.node'
node {
	setup.nodeVersion = buildsrc.NvmRc.read(file('../.nvmrc'))
	setup.npmVersion = 'provided'

	npmRun('test_ci') {
		dependsOn 'beforeCompile'
		inputs.file('tsconfig.json').withPathSensitivity(PathSensitivity.RELATIVE)
		inputs.dir('src/main/scripts').withPathSensitivity(PathSensitivity.RELATIVE)
		outputs.dir('build/test-results/jest')
	}
	npmRun('updateSnapshot') {
		dependsOn 'beforeCompile'
	}
	gulp('build') {
		dependsOn 'beforeCompile'
		inputs.file('tsconfig.json').withPathSensitivity(PathSensitivity.RELATIVE)
		inputs.dir('src/main/scripts').withPathSensitivity(PathSensitivity.RELATIVE)
		outputs.dir('build/dist')
	}
	npmArbitraryCmd('pruneDependencies', 'prune --production') {
		mustRunAfter 'assemble'
	}
	copyNodeExe() // used by :stage for heroku
}
tasks.register('test') {
	dependsOn 'npm_run_test_ci'
}
tasks.register('updateSnapshot') {
	dependsOn 'npm_run_updateSnapshot'
}
tasks.register('check') {
	dependsOn 'test'
}
tasks.register('assemble') {
	dependsOn 'gulp_build'
}
