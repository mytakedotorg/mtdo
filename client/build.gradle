////////////////////////////////////////
// java - gets compiled to typescript //
////////////////////////////////////////
apply plugin: 'com.diffplug.spotless'
spotless {
	ratchetFrom 'origin/staging'
	format 'scss', {
		target 'src/main/styles/**/*.scss'
		prettier(VER_PRETTIER)
	}
	format 'typescript', {
		licenseHeaderFile rootProject.file('gradle/spotless-license-agpl.java'), '(import|const|declare|export|var) '
		target 'src/main/scripts/**'
		targetExclude '**/java2ts/**', '**/__snapshots__/**', '**/*.json'
		prettier(VER_PRETTIER)
	}
	format 'js', {
		target 'gulpfile.js'
		prettier(VER_PRETTIER)
	}
}

// used only for src/main/resources
apply plugin: 'java-library'

///////////////////////////////////////////////////////////////////////
// node stuff - compiles sass and typescript into src/main/resources //
///////////////////////////////////////////////////////////////////////
apply plugin: 'org.mytake.gradle.node'
node {
	setup.nodeVersion = buildsrc.NvmRc.read(file('../.nvmrc'))
	setup.npmVersion = 'provided'

	npmRun('test_ci') {
		dependsOn(':client-interface:jsweet')
		dependsOn(':lucene:indexHash')
		inputs.dir('src/main/scripts').withPathSensitivity(PathSensitivity.RELATIVE)
		outputs.dir('build/test-results/jest')
	}
	npmRun('updateSnapshot') {
		dependsOn(':client-interface:jsweet')
	}

	// every gulp task automatically installs from package-lock.json using 'npm ci'
	// and adds that and gulpfile.js as input files
	gulp 'permanent', {
		inputs.dir('src/main/permanent').withPathSensitivity(PathSensitivity.RELATIVE)
		outputs.dir('src/main/resources/assets/permanent')
		// technically it's that scriptsDev and scriptsProd depend on jsweet, but it's easier to put it here
		dependsOn(':client-interface:jsweet')
	}
	for (t in [
				'styles',
				'scripts'
			]) {
		final String taskName = t
		gulp "${taskName}Dev", {
			dependsOn 'gulp_permanent', ':lucene:indexHash'
			inputs.dir("src/main/${taskName}").withPathSensitivity(PathSensitivity.RELATIVE)
			if (taskName == 'scripts') {
				inputs.file('tsconfig.json').withPathSensitivity(PathSensitivity.RELATIVE)
			}
			outputs.dir("src/main/resources/assets-dev/${taskName}")
		}
		gulp "${taskName}Prod", {
			dependsOn 'gulp_permanent', ':lucene:indexHash'
			inputs.dir("src/main/${taskName}").withPathSensitivity(PathSensitivity.RELATIVE)
			if (taskName == 'scripts') {
				inputs.file('tsconfig.json').withPathSensitivity(PathSensitivity.RELATIVE)
			}
			outputs.dir("src/main/resources/assets/${taskName}")
		}
	}
	gulp 'revProd', {
		dependsOn 'gulp_stylesProd', 'gulp_scriptsProd'
		inputs.file('src/main/resources/assets/styles/manifest.json').withPathSensitivity(PathSensitivity.RELATIVE)
		inputs.file('src/main/resources/assets/scripts/manifest.json').withPathSensitivity(PathSensitivity.RELATIVE)
		outputs.file('src/main/resources/assets/manifest.json')
	}
}
clean {
	delete 'src/main/resources/assets'
	delete 'src/main/resources/assets-dev'
}

// hook the gradle defaults into our npm tasks
tasks.named('test') {
	dependsOn 'npm_run_test_ci'
}
tasks.register('updateSnapshot') {
	dependsOn 'npm_run_updateSnapshot'
}
tasks.named('check') {
	dependsOn 'test'
}
tasks.named('processResources') {
	dependsOn 'gulp_stylesDev', 'gulp_scriptsDev', 'gulp_revProd'
}

gradle.taskGraph.whenReady { taskGraph ->
	boolean disableProd = false
	if (taskGraph.hasTask(':server:runDev')) {
		disableProd = true
	}
	if (taskGraph.hasTask(':server:live')) {
		disableProd = true
		gulp_scriptsDev.enabled = false
	}
	if (disableProd) {
		gulp_revProd.enabled = false
		gulp_stylesProd.enabled = false
		gulp_scriptsProd.enabled = false
	}
}
