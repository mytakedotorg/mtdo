plugins {
	id 'com.diffplug.eclipse.apt'
	id 'com.diffplug.spotless-changelog'
}

ext.git_url = 'github.com/mytakedotorg/mtdo'
ext.maven_group = 'org.mytake.mtdo'
ext.maven_artifact = 'mtdo-plugin-gradle'
ext.maven_name = 'MyTake.org Factset'
ext.maven_desc = 'A shadowboard for facts, with dedicated ratchet holder'
ext.license = 'agpl'
ext.plugin_list = 'factset'
ext.plugin_tags = 'journalism'
ext.plugin_factset_id = 'org.mytake.factset'
ext.plugin_factset_impl = 'org.mytake.factset.gradle.FactsetPlugin'
ext.plugin_factset_name = 'MyTake.org Factset'
ext.plugin_factset_desc = 'A shadowboard for facts, with dedicated ratchet holder'
ext.javadoc_links = 'https://docs.oracle.com/javase/8/docs/api/ https://docs.gradle.org/6.6/javadoc/'
spotlessChangelog {
	changelogFile 'README.md'
	commitMessage 'Published factset-tooling/{{version}}'
	branch 'staging'
	tagPrefix 'factset-tooling/'
}

apply from: 干.file('base/changelog.gradle')
apply from: 干.file('spotless/freshmark.gradle')

apply from: 干.file('base/java8.gradle')
apply from: 干.file('spotless/java.gradle')

apply from: 干.file('base/gradle-plugin.gradle')
apply from: 干.file('base/maven.gradle')

tasks.javadoc.enabled = false // due to Java 11

spotless {
	ratchetFrom 'origin/staging'
}

import com.diffplug.common.swt.os.OS

//////////////
// <HACK>
// This is terrible, but it lets us not publish client-interface, and I couldn't get shadow to work
//////////////
tasks.register('syncClientInterfaceJava2ts', Sync) {
	from '../client-interface/src/main/java/java2ts'
	into 'src/main/java/java2ts'
}
for (name in [
	'compileJava',
	'spotlessJava',
	'sourcesJar'
]) {
	tasks.named(name) {
		dependsOn 'syncClientInterfaceJava2ts'
	}
}
afterEvaluate {
	tasks.named('publishPluginJar') {
		dependsOn 'syncClientInterfaceJava2ts'
	}
}
tasks.named('eclipse') {
	dependsOn 'syncClientInterfaceJava2ts'
}
/////////////
// </HACK>
/////////////

configurations {
	guiRuntime {
		// used to declare dependencies needed at runtime by the "gui" task,
		// but they can't be declared by this module because they are platform-specific,
		// and maven can't handle the logic for that so we do it ourselves in the plugin
		canBeResolved = false
		canBeConsumed = true
	}
	compileOnly {
		extendsFrom guiRuntime
	}
	testImplementation {
		extendsFrom guiRuntime
	}
}

String VER_AUTOVALUE = '1.8.2'
dependencies {
	annotationProcessor     "com.google.auto.value:auto-value:${VER_AUTOVALUE}"
	implementation          "com.google.auto.value:auto-value-annotations:${VER_AUTOVALUE}"
	testAnnotationProcessor "com.google.auto.value:auto-value:${VER_AUTOVALUE}"
	testImplementation      "com.google.auto.value:auto-value-annotations:${VER_AUTOVALUE}"

	compileOnly "com.google.code.findbugs:jsr305:$VER_JSR_305"
	implementation "org.jsweet:jsweet-core:$VER_JSWEET_CORE"
	implementation "com.jsoniter:jsoniter:$VER_JSONITER"
	implementation "com.google.code.gson:gson:${VER_GSON}"
	implementation 'org.jsoup:jsoup:1.14.3'
	implementation "org.eclipse.jgit:org.eclipse.jgit:${VER_JGIT}"
	implementation "com.squareup.okhttp3:okhttp:${VER_OKHTTP}"
	implementation 'com.diffplug.durian:durian-core:1.2.0'
	implementation 'com.diffplug.durian:durian-collect:1.2.0'
	implementation 'com.diffplug.durian:durian-io:1.2.0'

	implementation 'com.diffplug.spotless-changelog:spotless-changelog-plugin-gradle:2.1.2'
	implementation 'com.diffplug.spotless:spotless-plugin-gradle:5.12.4'
	implementation 'com.diffplug.gradle:goomph:3.29.1'

	testImplementation "junit:junit:$VER_JUNIT"
	testImplementation "org.assertj:assertj-core:$VER_ASSERTJ"

	guiRuntime 'com.diffplug.durian:durian-swt:3.3.1'
	guiRuntime 'io.reactivex.rxjava2:rxjava:2.2.21'
	guiRuntime 'com.ibm.icu:icu4j:69.1'
	implementation 'info.debatty:java-string-similarity:2.0.0'
}

apply plugin: 'com.diffplug.eclipse.mavencentral'
eclipseMavenCentral {
	release '4.17.0', {
		dep 'guiRuntime', 'org.eclipse.swt'
		dep 'guiRuntime', 'org.eclipse.jface'
		dep 'guiRuntime','org.eclipse.jface.text'
		if (OS.getNative().isWindows()) {
			dep 'guiRuntime', 'org.eclipse.swt.browser.chromium.win32.win32.x86_64'
		}
		useNativesForRunningPlatform()
	}
}

test {
	useJUnit {
		excludeCategories 'com.diffplug.common.swt.InteractiveTest'
	}
}
